\documentclass{article}
\usepackage{hyperref}
\topmargin     -1.5cm  % read Lamport p.163
\oddsidemargin -0.04cm % read Lamport p.163
\evensidemargin -0.04cm % same as oddsidemargin but for left-hand pages
\textwidth     16.59cm
\textheight     22.94cm
\parskip       7.2pt  % sets spacing between paragraphs
\parindent       3mm  % sets leading space for paragraphs
\usepackage{verbatim}
\usepackage{hyperref}
%\linespread{2}
\title{Shine Mosquito, shine !!!!\\
STAT 585 Final Project}
\author{ Ignacio Alvarez \and Natalia da Silva}
\begin{document}
\maketitle


\section{Introduction}
We want to learn and build a shiny app as a final project for Stat585, using {\tt shiny} package we can create web application for data analysis that allow the final user make the data exploration by themselves. 

Iowa State University Medical Entomology Laboratory and Iowa Department of Public Health and the University Hygienic Lab (Iowa City, IA), have been monitored on an annual basis mosquito populations and mosquito-borne disease in the State of Iowa since 1969. ``The primary goal of this project was to integrate light trap data from these efforts into a centralized back-end database and interactive website that is available through the internet at \href{ http://iowa-mosquito.ent.iastate.edu}{http://iowa-mosquito.ent.iastate.edu}." (this web page is down from April 7-th).

In the web page from Entomology Laboratory you can find weekly mosquito abundance compared with data from previous years. Additional interactive capabilities facilitate analyses of the data based on mosquito species, distribution, or a time frame of interest. All data can be viewed in graphical and tabular format and can be downloaded.

\textbf{Objective:} The objective of this project is design a web application using shiny package to help entomologist to visualize, summarize and analyze the data produced by the surveillance program. The information presented in the Entomology Laboratory web today allows see information by specie along all the years  but we can never see more than one specie or more than one site at the same time. Then the information is there but the comparisons are difficult. We will include different visualization tools in the shiny app to make simpler the comparison at different levels (individual, group and community ). 


\section{Application structure and design}
Here we describe how we design the web app, what are the questions we want to address and how this is done in the app. The app have 5 tabset panels each of them try are focused in some analysis level, we describe how to use the shiny app based on examples. 

We use part of the dataset, the subset that entomologists are more confident with and they think are the most relevant for the analysis. We use yearly mosquito counts for 8 sites (cfall, green valley, edale, ewing, gildea, union, wloo, wlp) and 20 years of information. However complete data has more sites and years on weakly basis but the information with this desegregation is not comparable. 

The shiny app is designed to answer questions at three analysis level:
\begin{enumerate}
\item \textit{Within specie}:  the objective is to analyse the individual behavior of one specie across years and for different sites. We want to answer:
Does the specie behavior have changed across the years? For a particular specie, is there any difference between sites?   How many years the proportion of each specie is above the mean proportion of the specie across sites?
\item \textit{Between genotype}: the objective is to analyse more than one genotype at the same time. We want to answer: which genotype are more relevant in each site along all the years? Are there some years where some genotype is more relevant in one site?
\item \textit{Community level}: we want to see the community dynamic, we want to answer:  which communities are rare? Which environmental factors are important to distinguish rare communities?
\end{enumerate}


\subsection{Tabset 1: Specie-site}
In this tabset the user can find a {\tt selectInput} with all the mosquito species and a {\tt checkbox} with all sites. The idea is to analyse one species at time across all years and compare the behavior in the different sites. The information presented after selection will be a plot with the proportion of the mosquito specie in a specific year in a specific site. In each plot also there are a reference red line, this line represents the mean proportion for each species across sites  and is useful to see how far is the behavior of the specie in the specific site respect to it mean behavior.

Additionally in the same tab set we can see a numeric summary of results like the proportion of the specie across all the years in the same site, the maximum proportion of that specie in a site and finally the number of years that in a specific site the specie is above its mean.
<<rpack,echo=FALSE, message=FALSE,warning=FALSE,tidy=TRUE>>=
library(vegan)
library(ggplot2)
library(reshape2)
library(plyr)
library(gridExtra)
@

<<rdata, echo=FALSE, cache=TRUE, message=FALSE,warning=FALSE>>=
#setwd('C:/Users/nachalca/Documents/GitHub/mosquito_shine')
# load data sets we use
msq<- read.csv('shiny_msq/msqdata.csv', header=T)
msq.res<-msq[,c('site','year','Abundance','SpeciesRichness','DominanceBP', 'Simpson', 'Shannon', 'Evenness', 'AevexansRatio')]
msq.long <- read.csv('shiny_msq/msq_long.csv', header=T)
msq.long$subregion <- msq.long$site
levels(msq.long$subregion) <- c("black hawk", "black hawk", "polk","scott","woodbury","polk","black hawk","scott" )
msq.spyr <- ddply(.data=msq.long,.variables=c('year','specie'),function(x) data.frame(x , prop.spyr=mean(x$prop.spst)) )
msq.ind.aux <- melt(msq[,c(1,2,40:46)],id.vars=c('site', 'year'))
colnames(msq.ind.aux)[3:4] <- c('Index', 'Index.val')

ia.c <- map_data('county', 'iowa')
ia.s <- map_data('state', 'iowa')
ia2 <- subset(ia.c, subregion %in% unique(msq.long$subregion))
#ia2$order <- NULL
#msq.ia <- merge(msq.spyr,ia2, by= 'subregion')

# compute proportion geno proportoin for each year-site

#separate the genotype of each specie
msq.long$specie2<-as.character(msq.long$specie)
aux.geno <- strsplit(msq.long$specie2 ,'\\.')
geno<-NULL
for(i in 1:length(aux.geno)){
geno[i]<-aux.geno[[i]][1]
}
msq.long$geno<-geno
msq.geno <- ddply(msq.long, .(year,site) ,function(x) tapply(x$count, x$geno, sum)/sum(x$count) )
msq.geno <- melt(msq.geno, id.vars=c('year','site'), variable.name='geno', value.name='prop.geno')
# only for UI
lab.index<-c("Abundance","SpeciesRichness", "DominanceBP","Simpson",  "Shannon"  , "Evenness","AevexansRatio","DegreeDayExact",
"PrecipationExact" ,"DegreeDayMinus2","PrecipationMinus2")
cap1 <-'Yearly species proportion per site. The red line represents the mean proportion for each species across sites'
cap4 <-'The right panel show the density of the distantce to the mean community, the red line es the quatile.
        In left panel each point is a site-year and the red ones are the extreme communities.'


#density plot for rare communities id
msq.sp <- colnames(msq)[-c(1:2, 39:52)]
env   <- colnames(msq)[c(39:52)]
# Compute species proportion on each site*year and the mid-community
prop <- (msq[,msq.sp]) /apply(msq[,msq.sp],1,sum, na.rm=T)
mid.comu <- apply(prop, 2, mean)
dist.out <- as.matrix(vegdist( rbind(prop,mid.comu),dist='euclidean') ,nrow=161) 
msq$distout <- dist.out[-161,161]
dat.den<-density(c(-msq$distout,msq$distout),from=0)
@

% As we said before we can select only 1 species at time, and additionally select multiple sites. The information presented in this plot is yearly species proportion  facet per site. In the each plot there are a reference line that represents the mean proportion for each species across sites. 

Choices on shiny: Species (only one) and multiple Sites. 
\begin{figure}[hbpt]
<<rtab1, dependson=c('data'), echo=FALSE,fig.height=4>>==
d <- subset(msq.spyr, (specie == 'Aedes.vexans') & (site == 'Gvalley') )
ggplot(data=d, aes(x=year,y=prop.spst),color=site)+geom_point(size=4)+geom_line()+scale_y_continuous('Proportion of specie')+scale_x_continuous('Year')+geom_line(aes(x=year,y=prop.spyr), color=I('red')) +facet_wrap(facets=~site, scales='free')
@
\caption{Example plot for tabset 1 \label{tab1}}
\end{figure}
As an example, we show here the proportion of Aedes.Vexan on Green Valley over time, the red line represents the average proportion of this species on each year. So on average across all years and sites, this species represents around 75\% of the mosquito counts. However on Green Valley the Aedes.Vexan proportion is most of the time below the mean, What happen in Green Valley ? The Vexans don't like it anymore !!!! 

\subsection{Tabset 2: Genotype-site}

In this tabset the user will find two checkedboxed, one to select the genotype (Aedes, Anopheles, Coquilletidia, Culex, Culiseta, Orthopodomyia, Psorophora and Uranotaenia ) and the other one to select the sites. In this case the user can select multiple sites and multiple genotypes. Here the idea is compare the genotypes in all the sites. After selection the user will see in each panel the proportion of a genotype in each year for a site or more than one.  The plot is faceted by genotype and each additional selected site will be added as a new line in the specific genotype plot.

The example shows the two most abundant genotypes in Iowa mosquito, Aedes and culex. 
\begin{figure}
<<rtab2, dependson=c('data'), echo=FALSE,fig.height=4,fig.width=7>>==
d <- subset(msq.geno, geno %in% c('Aedes','Culex') & site %in% c('Cfall', 'Gvalley') )
qplot(data=d,x=year,y=prop.geno)+geom_point()+scale_x_continuous('Year')+scale_y_continuous('Proportion of genotype')+geom_line(aes(color=site))+facet_grid(facets=~geno)
@
\caption{Example plot for tabset 2 \label{tab2}}
\end{figure}

\subsection{Tabset 3: Location} 
In this tabset the user can select multiple species, after selection the user will see a plot with the Iowa map with the distribution of that specie in each site, the color indicate the abundance of the specific specie in the place. The idea in this tabset is see \textit{where} is more frequent to see a particular specie. The current dataset has only 8 sites and some species are not abundant a complete withe  map indicate the specie in the specific site does not like that place. If the color in the site is red then that specie is more abundant in that specific site. We can see the spacial distribution of the specie across Iowa

<<rtab3,echo=FALSE,dependson='data', results='hide'>>=
d <- subset(msq.spyr, specie %in% c('Aedes.triseriatus','Culex.pipiens.group'))
d1 <- ddply(d, .(specie,subregion),summarise, 
            prop.diff = mean((prop.spst-prop.spyr)/prop.spyr) ,
            prop.st = mean(prop.spst), prop.yr = mean(prop.spyr),
            lgst = prop.st/(1-prop.st) , lgyr = prop.yr/(1-prop.yr),
            or = log(lgst/lgyr), rr = prop.st/prop.yr
            )
msq.ia <- merge(d1,ia2, by= 'subregion')

p <- ggplot() + geom_polygon(data=msq.ia, aes(x=long,y=lat,group=group, order=order, fill=((prop.st-prop.yr)/prop.yr) ) ) +
       theme_bw() + theme(axis.text=element_blank(), axis.title=element_blank(),
                       axis.line=element_blank(),
                       axis.ticks=element_blank(),
                       panel.border=element_blank(),
                       panel.grid=element_blank(), legend.position='bottom' )
pdf(file='mapaexample.pdf', height=4)
p + geom_path(data=ia.s, aes(x=long, y=lat, group=group) ) + facet_wrap(~specie) + scale_fill_gradient2( low='black', high='red') +theme(legend.title=element_blank())
dev.off()
@

\begin{figure}
\includegraphics[width=\textwidth]{mapaexample}
\caption{Example plot for tabset 3 \label{tab3}}
\end{figure}

\subsection{Tabset 4: Rare communities}
Besides describing each community we may be interesting in comparing them, in particular we want to know if all communities are alike or there are some site-year observations that are different from the rest. 
One important feature for the entomologist is to study the community characteristics, there are several indices reflecting different aspects of the mosquito community composition like abundance, Simpson index, etc that will be useful for a community level comparison.

Working with species proportion within one site and year (instead of total counts) we compute an "average community" which simply taking average of each species proportion. 
Then for each observations we compute the distance respect to that average community. 

In this tabset the user will find  two select inputs with variables to describe the mosquito community composition and a scroll bar to select a specific quantile. After selection the user will see the density of the distance to the mean community, the red line is the quantile. In left panel each point is a site-year and the red ones are the extreme communities, the extreme values are colored based on the selected quantile (scroll bar) and in the axis we can select difference variables to explain the community composition.  

We plot a two panel figure, on the right is the estimated density of the distances to the mid point community. The vertical red line represents the 90 quantile (as defect). 
\begin{figure}
<<rtab4,echo=FALSE,fig.height=4>>=
q <- quantile(msq$distout, probs=.9) 
d <- data.frame(lax = msq[,'PrecipationMinus2'], lay=msq[,'DominanceBP'],rare=as.factor( msq$distout > q)) 

p1 <- qplot(x=dat.den$x, y=dat.den$y,geom='line',size=I(1.5)) + geom_vline(xintercept=q,color=I('red')) +
          ylab('') + xlab('Distance to Average Community')

p2 <- qplot(data=d, lax,lay, color=rare)  + scale_color_manual(values=c('black', 'red')) + xlab(as.character('PrecipationMinus2')) + ylab(as.character('DominanceBP')) + theme(legend.position='bottom')
grid.arrange( p1, p2 ,ncol=2 )                                                                                         
@
\caption{Example plot for tabset 4 \label{tab4}}
\end{figure}

On the left panel there is a scatter plot of two community variables and we colored the points corresponding to communities further from the center community, this is with distance bigger than its 90\% quantile. 

On the shiny it is possible to choose the quantile that determine which communities are consider extreme and also the variables plot in the right panel. In this example the selected quantile is 90\% and the variables are Precipitation (horizontal) and Dominance index (vertical). Basically we can see all extreme communities shows big values in Dominance but are not extreme on precipitation. 

\subsection{Tabset MDS}
The last tabset presents also information at community level, this time we compute a distance matrix with every distances among each pair of communities. We an Multidimensional Scaling (MDS) to visualize the distance matrix, the distance computation and the MDS are done using {\tt vegan} package with {\tt vegdist} and {\tt metaMDS} functions. 

The user will see a scatterplot with the MDS results and going over any point with the mouse it will display some information to identify the specific community, in particular, information about site, year and distance from the center will be displayed. 

Additionally the user have the option to select a specific site and a specific year and will see these values colored and with different shape in the plot representation. 

\begin{figure}
\includegraphics[scale=.4, width=\textwidth]{screenshot}
\caption{Example plot for tabset 5 \label{tab5}}
\end{figure}

\subsection{Using the app}
We finish the web app description with a little instruction on how to run the application and get ready to analyze the mosquito surveillance data. You just need to follow these steps :

\begin{enumerate}
\item go to \href{https://github.com/nachalca/mosquito_shine}{https://github.com/nachalca/mosquito_shine}
\item copy the folder \textit{shiny$\_$msq} into your local machine
\item Open {\verb R } and change the working directory where \textit{shiny$\_$msq} folder is saved
\item run {\verb library(shiny) }
\item run {\verb runApp('shiny_msq') }
\end{enumerate}

\section{Computing}

There are 3 R files needed to run this app: {\verb ui.R }, {\verb server.R } and {\verb datasources.R }. The last one is a code read and transform the data set used by the shiny app. We describe the main characteristics of {\verb ui.R } and {\verb server.R } files in this section. 

\subsection{UI}

The ui have two principal aspects, the {\verb slidebarPanel } and {\verb mainPanel }, we have 5 tabsets in the web app and we design it to have differents shiny options on each tabset. Then the {\verb slidebarPanel } consist in a series of 5 {\verb conditionalPanel } one per tabset, for example the tabset 4 options are implemented by the following code

<<cond1,eval=FALSE,tidy=TRUE>>=
          conditionalPanel(condition="input.conditionedPanels==4",
                           img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300), 
                           sliderInput("q", "Quantile", 
                                       min=0, max=100, value=90,step=1),
                          
                           selectInput(inputId = "index.X",
                                      label = "Select x axis variable",
                                      choices = lab.index,selected='PrecipationExact'),
                           
                          selectInput(inputId = "index.Y",
                                        label = "Select y axis variable",
                                        choices = lab.index,selected='DegreeDayExact')
            
           )
@

this create 3 options, the first one for selecting a quantile to act as a limit of what is consider as an extreme community, the other two allows the selection of the x and y variables for the scatterplot. 

The {\verb mainPanel } basically set up a tabpanel for each tabset we want to organize the output, the code is the following 
<<main,eval=FALSE,tidy=TRUE>>=
    mainPanel(
        tabsetPanel(
            tabPanel("Species-site",p(cap1), plotOutput("plot1"),tableOutput("tab1"),p(cap1.1),value=1),
            
            tabPanel("Genotype-site",p(cap6), plotOutput("plot6"),value=6),
            
            tabPanel("Location", plotOutput("plot2"),value=2), 
            
            tabPanel("Indexes", plotOutput("plot3"),value=3),
            
            tabPanel("Rare Comunities", p(cap4),plotOutput("plot4"),value=4),
            
            tabPanel("MDS",p(cap5), ggvis_output("my_plot"),value=5),
            
            id="conditionedPanels")
            
        ) # close mainPanel
@


<<uicode,eval=FALSE,tidy=TRUE,echo=FALSE>>=
source('datasources.R')
shinyUI(bootstrapPage(
#navbarPage("MSQ", id="barnavi",  theme = "bootstrap.min.css",
  titlePanel("Shine Mosquito shine!"), 
    fluidRow(
      sidebarLayout(
        sidebarPanel(width=3,
          conditionalPanel(condition="input.conditionedPanels==1",
                     img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300), 
                     #checkboxGroupInput(inputId = "specie",
                     #     label = "Select specie:",
                     #    choices = levels(msq.long$specie),selected='Aedes.albopictus'),
                    selectInput(inputId = "specie",
                            label = "Select specie:",
                            choices = levels(msq.long$specie),selected='Aedes.vexans'),
     
                    checkboxGroupInput(inputId = "site",
                            label = "Select site:",
                            choices = levels(msq.long$site),selected='Cfall')
                          ),
    
          conditionalPanel(condition="input.conditionedPanels==2",
                           img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300),                            
                     checkboxGroupInput(inputId = "specie2",
                                 label = "Select specie:",
                                 choices = levels(msq.long$specie),selected='Aedes.vexans')
                          ),
    
          conditionalPanel(condition="input.conditionedPanels==3",
                           img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300),                            
                     checkboxGroupInput(inputId = "index",
                                        label = "Select index:",
                                        choices = lab.index,selected='Simpson'),
                     checkboxGroupInput(inputId = "site3",
                                        label = "Select site:",
                                        choices = levels(msq.long$site),selected='Cfall')
                          ),

          conditionalPanel(condition="input.conditionedPanels==4",
                           img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300), 
                           sliderInput("q", "Quantile", 
                                       min=0, max=100, value=90,step=1),
            selectInput(inputId = "index.X",
                         label = "Select x axis variable",
                         choices = lab.index,selected='PrecipationExact'),
                           
            selectInput(inputId = "index.Y",
                        label = "Select y axis variable",
                        choices = lab.index,selected='DegreeDayExact')
            
           ),
           conditionalPanel(condition="input.conditionedPanels==5",
                         img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300),
                         selectInput(inputId = "site5",
                                              label = "Select site:",
                                              choices = levels(msq.long$site),selected='Cfall'),
                         selectInput(inputId = "year5",
                                     label = "Select year:",
                                     choices = unique(mds2$year), 
                                     selected=NULL)
                         
          
                           ), 
          
          conditionalPanel(condition="input.conditionedPanels==6",
                              img(src="Mosquito_da_Dengue_by_Lukemaciel.png", height = 100, width = 300),                            
                              checkboxGroupInput(inputId = "geno",
                                                 label = "Select genotype:",
                                                 choices = unique(msq.long$geno),selected='Aedes'),
                                checkboxGroupInput(inputId = "site6",
                                              label = "Select site:",
                                              choices = levels(msq.long$site),selected='Cfall')
          )
          
          
                  ), # close sidebarPanel
  
    mainPanel(
        tabsetPanel(
            tabPanel("Species-site",p(cap1), plotOutput("plot1"),tableOutput("tab1"),p(cap1.1),value=1),    
            tabPanel("Genotype-site",p(cap6), plotOutput("plot6"),value=6),
            tabPanel("Location", plotOutput("plot2"),value=2), 
            tabPanel("Indexes", plotOutput("plot3"),value=3),
            #tabPanel("Rare Comunities", plotOutput("plot4.1"),plotOutput("plot4.2"),value=4),
            tabPanel("Rare Comunities", p(cap4),plotOutput("plot4"),value=4),
            tabPanel("MDS",p(cap5), ggvis_output("my_plot"),value=5),
            
            id="conditionedPanels" )
        
            ) # close mainPanel
    
          ) # close sidebarLayout
        ) # close fluidRow
      ) # close fluidPage 
#)for web link 
  ) # close shinyUI



@

\subsection{Server}

We have organized the server file in two main parts, a first part where we create reactive data set for each plot we want to include, and after using each reactive data set we create a reactive plot or table to include in the tabset. 

As an example, here is the dataset and the plot to create the last tabset, 

<<ggivsplot, eval=FALSE, tidy=TRUE>>=
#data for plot 5
    d5 <-reactive({ data.frame(mds2,sitecol=as.factor(mds2$site==input$site5),yearcol=as.factor(mds2$year==input$year5) )})

# function for display information with the tooltip
showSite <- function(x) {
  if (is.null(x)) return(NULL) 
  xx <- as.numeric(x)
  xx <- round(xx, 4)
  ss <-   mds2[ round(mds2$MDS1,4) == xx[1] & round(mds2$MDS2,4) == xx[2],]
  paste0("<b>",'Site:',ss$site, "</b><br>",
         'Year:',ss$year, "<br>",
         'Distance:', round(ss$dist, 3)) 
}

# ggvis plot
gv<- reactive({
  #check<-input_select(unique((mds2$site))) 
  p <- ggvis(d5() ,props( ~MDS1, ~MDS2, shape=~yearcol ,fill=~sitecol,fill.hover := "red", size.hover := 200) ) 
  p + layer_point() + tooltip(showSite)
})
  
# set up the output plot
output$controls <- renderControls(gv)
observe_ggvis(gv, "my_plot", session)               
output$plot6 <- reactivePlot(function() {    
  print( ggplot(data=d6(), aes(x=year,y=prop.geno))+geom_point(size=2)+geom_line(aes(color=site)) +facet_wrap(facets=~geno)
         + scale_x_continuous("Year") +scale_y_continuous("Proportion of geno"))
})
@

<<servercode,eval=FALSE,tidy=TRUE, echo=FALSE>>=

source('datasources.R')

shinyServer(
  function(input, output,session) {
      
    # data for plot 1
    msq.spyr$pr.up <- msq.spyr$prop.spst>msq.spyr$prop.spyr
    d1  <- reactive( { subset(msq.spyr, (specie %in%input$specie) & (site%in%input$site)) })
    
    # data for table below plot
    d.aux <- ddply(msq.spyr, .(specie,site), summarise, Prop. = mean(prop.spst),Max.prop=max(prop.spst),Sum.above=sum(pr.up))
    
    d1.1  <- reactive({ subset(d.aux, (specie %in%input$specie) & (site%in%input$site)) })
    
    # data for plot 2
    d2 <- reactive( { subset(msq.ia, specie %in% input$specie2) } )
  
    # data for plot 3
    d3 <- reactive( { subset( msq.ind.aux, (site %in% input$site3) & (Index%in%input$index)) } )
    
    # data for plot 4
    d4.1 <- reactive( { quantile(msq$distout, probs=input$q/100)} )
    d4.2 <- reactive({ data.frame(lax = msq[,input$index.X], lay=msq[,input$index.Y],rare=as.factor( msq$distout > d4.1() ) ) })
    #d4.2 <- reactive({ msq[,c(input$index.X,input$index.Y)] })
    #d4.3 <- reactive({ rare = as.numeric( msq$distout > d4.1() )   })
    
    #data for plot 5
    d5 <-reactive({ data.frame(mds2,sitecol=as.factor(mds2$site==input$site5),yearcol=as.factor(mds2$year==input$year5) )})
    # x <-  msq[,as.character(input$mds.color)]
    # color.var <- cut(x, breaks=quantile(x, probs=c(0,.1,.9,1)), include.lowest=T, labels=c('low','mid','high'))
    
    # data for plot 6
    d6  <- reactive( { subset(msq.geno, (geno %in%input$geno) & (site%in%input$site6)) })
    
    #==============================================
  output$plot1 <- reactivePlot(function() {    
    print( ggplot(data=d1(), aes(x=year,y=prop.spst),color=site)+geom_point(size=4)+geom_line()+geom_line(aes(x=year,y=prop.spyr), color=I('red')) +facet_wrap(facets=~site, scales='free')
           + scale_x_continuous("Year") +scale_y_continuous("Proportion of specie"))
  })
    output$tab1 <- renderTable({
      head(d1.1())
   })

  output$cap1<-renderText({'description of plot'})   
  output$plot2 <- reactivePlot(function() {        
    ggplot() + geom_polygon(data=ia.c, aes(x=long,y=lat,group=group) )
  
    p <- ggplot() + geom_polygon(data=d2(), aes(x=long,y=lat,group=group, order=order, fill=((prop.spst-prop.spyr)/prop.spyr) ) ) +
       theme_bw() + theme(axis.text=element_blank(), axis.title=element_blank(),
                       axis.line=element_blank(),
                       axis.ticks=element_blank(),
                       panel.border=element_blank(),
                       panel.grid=element_blank(),
                       aspect.ratio=1/1.5)
  print(p + geom_path(data=ia.s, aes(x=long, y=lat, group=group) ) + facet_wrap(~specie) + scale_fill_gradient2( low='black', high='red') )
  })
  
  output$plot3 <- reactivePlot(function() {    
    print( ggplot(data=d3(), aes(x=year,y= Index.val))+
             geom_point(size=4)+geom_line()+geom_line(aes(x=year,y=Index.val), color=I('red'))+facet_grid(facets=Index~site, scales='free')
  )
  })


    output$plot4 <- renderPlot({
      p1 <- qplot(x=dat.den$x, y=dat.den$y,geom='line',size=I(1.5)) + 
        geom_vline(xintercept=d4.1(),color=I('red')) + ylab('') + xlab('Distance to Average Community')
      p2 <- qplot(data=d4.2(), lax,lay, color=rare)  + scale_color_manual(values=c('black', 'red')) +
            xlab(as.character(input$index.X)) + ylab(as.character(input$index.Y)) + theme(legend.position='bottom')
        print( grid.arrange( p1, p2 ,ncol=2 ) )
    })
  
  

showSite <- function(x) {
  if (is.null(x)) return(NULL) 
  xx <- as.numeric(x)
  xx <- round(xx, 4)
  ss <-   mds2[ round(mds2$MDS1,4) == xx[1] & round(mds2$MDS2,4) == xx[2],]
  paste0("<b>",'Site:',ss$site, "</b><br>",
         'Year:',ss$year, "<br>",
         'Distance:', round(ss$dist, 3)) 
}

#aux <- data.frame(mds2, sitecol= as.factor(mds2$site ==  'Gvalley'),color.var=msq[,'Aedes.vexans'] )
#aux2 <- subset(aux, color.var > 2524)


gv<- reactive({
  #check<-input_select(unique((mds2$site))) 
  p <- ggvis(d5() ,props( ~MDS1, ~MDS2, shape=~yearcol ,fill=~sitecol,fill.hover := "red", size.hover := 200) ) 
  p + layer_point() + tooltip(showSite)
})
      
  output$controls <- renderControls(gv)
  observe_ggvis(gv, "my_plot", session)               
  

output$plot6 <- reactivePlot(function() {    
  print( ggplot(data=d6(), aes(x=year,y=prop.geno))+geom_point(size=2)+geom_line(aes(color=site)) +facet_wrap(facets=~geno)
         + scale_x_continuous("Year") +scale_y_continuous("Proportion of geno"))
})


})
@
\end{document}